plugins {
	id 'fabric-loom' version '1.9.+'
	id 'maven-publish'
	id 'org.jetbrains.kotlin.jvm' version "2.1.0"
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	maven {
		url = "https://maven.nucleoid.xyz"
	}
	maven {
		url = "https://oss.sonatype.org/content/repositories/snapshots"
	}
	flatDir {
		dirs("libs")
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Yes this has to be capitalised
	modImplementation "com.github.quiltservertools:ledger:1.3.5"

	modImplementation "net.fabricmc:fabric-language-kotlin:1.9.4+kotlin.1.8.21"

	implementation(include("com.zaxxer:HikariCP:5.0.1"))

	// H2
	implementation(include("com.h2database:h2:2.2.224"))

	// MySQL
	implementation(include('com.mysql:mysql-connector-j:8.3.0'))

	// MariaDB
	implementation(include('org.mariadb.jdbc:mariadb-java-client:3.3.3'))

	// PostgreSQL
	implementation(include("org.postgresql:postgresql:42.7.3"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
	}
}
